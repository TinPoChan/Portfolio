@page "/"
@inject IPortfolioService PortfolioService


<PageTitle>Home</PageTitle>

<div class="container text-center mb-4 mt-4">
    <div class="p-5 text-white home_info">
        <hr style="height:10px" />
        <img src="/image/profile-pic.jpg" class="rounded-circle mb-4 mt-4" alt="Eric with a bear" style="width: 200px; height: 200px; object-fit: cover;" />
        <h1 class="display-5 fw-bold">I'm Eric,</h1>
        <p class="fs-4">a developer that focuses on problem solving</p>
        <hr style="height:10px" />
    </div>
</div>


<div class="container mb-5">
    <h2 class="text-center mb-4">Latest Projects</h2>
    <div class="row">
        @foreach (var project in latestItems)
        {
            <div class="col-md-4 d-flex align-items-stretch mb-4">
                <!-- Note the d-flex and align-items-stretch -->
                <div class="card w-100 d-flex flex-column" style="border-radius: 10px;">
                    <img src="@project.ImageUrl" class="card-img-top" style="border-radius: 10px 10px 0 0;" alt="@project.Title">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@project.Title</h5>
                        <p class="flex-fill">@SafeFormatDescription(project.Description)</p>
                        <a href="@project.ProjectUrl" class="btn btn-primary mt-auto">View Project</a>
                    </div>
                </div>

            </div>
        }
    </div>
    <div class="row">
        <div class="col text-center mt-4">
            <a href="/portfolio" class="btn btn-secondary">View All Projects</a>
        </div>
    </div>
</div>





@code {
    private List<PortfolioItem> latestItems = new();

    protected override async Task OnInitializedAsync()
    {
        latestItems = await PortfolioService.GetLatestPortfolioItemsAsync(3);
    }

    public static MarkupString SafeFormatDescription(string? description)
    {
        if (string.IsNullOrEmpty(description))
            return new MarkupString(string.Empty);

        // Example: Basic HTML encoding (not sufficient for all cases)
        string encodedDescription = System.Net.WebUtility.HtmlEncode(description);
        encodedDescription = encodedDescription.Replace("\n", "<br>");

        return new MarkupString(encodedDescription);
    }

}