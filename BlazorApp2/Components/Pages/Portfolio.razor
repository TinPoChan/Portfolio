@page "/portfolio"
@inject BlazorApp2.Data.ApplicationDbContext DB

<PageTitle>Portfolio</PageTitle>

<div class="text-center h3 m-4">
    Portfolio
</div>

<div class="container mt-3">
    <div class="row">
        @foreach (var project in DB.PortfolioItems)
        {
            <div class="col-md-4 d-flex align-items-stretch mb-4">
                <!-- Note the d-flex and align-items-stretch -->
                <div class="card w-100 d-flex flex-column" style="border-radius: 10px;">
                    <img src="@project.ImageUrl" class="card-img-top" style="border-radius: 10px 10px 0 0;" alt="@project.Title">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@project.Title</h5>
                        <p class="flex-fill">@SafeFormatDescription(project.Description)</p>
                        <a href="@project.ProjectUrl" class="btn btn-primary mt-auto">View Project</a>
                    </div>
                </div>
                <AuthorizeView>
                    <div class="mt-2">
                        <a href="@($"projects/edit?id={project.Id}")" class="btn btn-secondary">Edit</a>
                        <a href="@($"projects/details?id={project.Id}")" class="btn btn-info">Details</a>
                        <a href="@($"projects/delete?id={project.Id}")" class="btn btn-danger">Delete</a>
                    </div>
                </AuthorizeView>
            </div>
          
        }
    </div>
</div>


@code {
    public static MarkupString SafeFormatDescription(string? description)
    {
        if (string.IsNullOrEmpty(description))
            return new MarkupString(string.Empty);

        // Example: Basic HTML encoding (not sufficient for all cases)
        string encodedDescription = System.Net.WebUtility.HtmlEncode(description);
        encodedDescription = encodedDescription.Replace("\n", "<br>");

        return new MarkupString(encodedDescription);
    }
}
```